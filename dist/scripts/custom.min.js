var WiMapper;!function(e){var t=function(){function e(e,t,r,o){this.$stateProvider=e,this.$urlRouterProvider=t,this.$locationProvider=r,this.$logProvider=o,this.$stateProvider.state("main",{url:"/?rcode&workspaceID",template:"<ui-view/>",views:{map:{templateUrl:"Views/mapview.html",controller:"WiMapper.Controllers.MapController"},sidebar:{templateUrl:"Views/sidebarview.html",controller:"WiMapper.Controllers.SidebarController"},navbar:{templateUrl:"Views/navigationview.html",controller:"WiMapper.Controllers.NavbarController"}}}),this.$urlRouterProvider.otherwise("/"),this.$locationProvider.html5Mode(!0),this.$logProvider.debugEnabled(!1)}return e.$inject=["$stateProvider","$urlRouterProvider","$locationProvider","$logProvider"],e}();angular.module("WiMapper",["ui.router","ui.bootstrap","ui.checkbox","mobile-angular-ui","angulartics","angulartics.google.analytics","toaster","ngAnimate","ngFileUpload","leaflet-directive","WiMapper.Services","WiMapper.Controllers","WiM.Services","WiM.Event","wim_angular"]).config(t)}(WiMapper||(WiMapper={})),function(){"use strict";angular.module("WiMapper.Services",[])}();var __extends=this&&this.__extends||function(e,t){function r(){this.constructor=e}for(var o in t)t.hasOwnProperty(o)&&(e[o]=t[o]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},WiMapper;!function(e){var t;!function(e){"use strict";function t(e,t,o){return new r(e,t,o)}var r=function(e){function t(t,r,o){e.call(this,t,configuration.baseurls.WiMapper),this.$q=r,this.toaster=o,this.drawElevationProfile=!1,this.drawMeasurement=!1,this.showElevationChart=!1,this.allowStreamgageQuery=!1,this.measurementData=""}return __extends(t,e),t.prototype.elevationProfile=function(e){var t=this,r="http://elevation.arcgis.com/arcgis/rest/services/Tools/ElevationSync/GPServer/Profile/execute",o=new WiM.Services.Helpers.RequestInfo(r,!0,WiM.Services.Helpers.methodType.POST,"json",{InputLineFeatures:e,returnZ:!0,f:"json"},{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"},WiM.Services.Helpers.paramsTransform);this.Execute(o).then(function(e){var r=e.data.results[0].value.features[0].geometry.paths[0];r.length>0&&(t.elevationProfileGeoJSON={name:"NewFeatureType",type:"FeatureCollection",features:[{type:"Feature",geometry:{type:"LineString",coordinates:r},properties:""}]})},function(e){})["finally"](function(){})},t}(WiM.Services.HTTPServiceBase);t.$inject=["$http","$q","toaster"],angular.module("WiMapper.Services").factory("WiMapper.Services.ExplorationService",t)}(t=e.Services||(e.Services={}))}(WiMapper||(WiMapper={}));var WiMapper;!function(e){var t;!function(e){"use strict";function t(e){return new r(e)}var r=function(){function e(e){this.modal=e}return e.prototype.openModal=function(e,t){void 0===t&&(t=null),t&&(this.modalOptions=t),this.modal.open(this.getModalSettings(e))},e.prototype.getModalSettings=function(e){try{switch(e){case o.e_report:return{templateUrl:"Views/reportview.html",controller:"WiMapper.Controllers.ReportController",size:"lg",backdropClass:"backdropZ",windowClass:"windowZ"};case o.e_wateruse:return{templateUrl:"Views/wateruse.html",controller:"WiMapper.Controllers.WateruseController",size:"lg",backdropClass:"backdropZ",backdrop:"static",windowClass:"windowZ"};case o.e_about:return{templateUrl:"Views/about.html",controller:"WiMapper.Controllers.AboutController",size:"lg",backdropClass:"backdropZ",backdrop:"static",windowClass:"windowZ"};case o.e_help:return{templateUrl:"Views/help.html",controller:"WiMapper.Controllers.HelpController",size:"lg",backdropClass:"backdropZ",backdrop:"static",windowClass:"windowZ"};default:return!1}}catch(t){return!1}},e}();!function(e){e[e.e_report=1]="e_report",e[e.e_wateruse=2]="e_wateruse",e[e.e_about=3]="e_about",e[e.e_help=4]="e_help"}(e.SSModalType||(e.SSModalType={}));var o=e.SSModalType;t.$inject=["$modal"],angular.module("WiMapper.Services").factory("WiMapper.Services.ModalService",t)}(t=e.Services||(e.Services={}))}(WiMapper||(WiMapper={})),function(){"use strict";angular.module("WiMapper.Controllers",[])}();var WiMapper;!function(e){var t;!function(e){"use strict";var t=function(){function e(){this.lat=0,this.lng=0}return e}(),r=function(){function e(e,t,r){this.lat=e,this.lng=t,this.zoom=r}return e}(),o=(function(){function e(e,t,r,o,n){void 0===n&&(n=void 0),this.name=e,this.url=t,this.type=r,this.visible=o,this.layerOptions=n}return e}(),function(){function e(e,t,r){void 0===e&&(e=null),void 0===t&&(t=null),void 0===r&&(r=!0),this.maxZoom=e,this.minZoom=t,this.zoomControl=r}return e}()),n=function(){function e(e,t,r,o,n,i,a,s,l,c){var p=this;this.$scope=e,this.center=null,this.layers=null,this.mapDefaults=null,this.mapPoint=null,this.bounds=null,this.markers=null,this.geojson=null,this.events=null,this.layercontrol=null,this.regionLayer=null,e.vm=this,this.init(),this.toaster=t,this.angulartics=r,this.searchService=s,this.$locationService=o,this.leafletBoundsHelperService=i,this.leafletData=a,this.explorationService=l,this.eventManager=c,this.eventManager.SubscribeToEvent(WiM.Directives.onLayerChanged,new WiM.Event.EventHandler(function(e,t){p.onLayerChanged(e,t)})),this.eventManager.SubscribeToEvent(WiM.Services.onSelectedAreaOfInterestChanged,new WiM.Event.EventHandler(function(e,t){p.onSelectedAreaOfInterestChanged(e,t)})),e.$on("leafletDirectiveMap.mousemove",function(e,t){var r=t.leafletEvent.latlng;p.mapPoint.lat=r.lat,p.mapPoint.lng=r.lng}),e.$on("leafletDirectiveMap.drag",function(e,t){p.cursorStyle="grabbing"}),e.$on("leafletDirectiveMap.dragend",function(e,t){p.cursorStyle="pointer"}),e.$watch(function(){return p.explorationService.elevationProfileGeoJSON},function(e,t){e&&p.displayElevationProfile()}),e.$watch(function(){return p.explorationService.drawElevationProfile},function(e,t){e&&p.elevationProfile()}),e.$watch(function(){return p.explorationService.drawMeasurement},function(e,t){e&&p.measurement()})}return e.prototype.init=function(){this.center=new r(39,-100,3),this.layers={baselayers:configuration.basemaps,overlays:configuration.overlayedLayers},this.mapDefaults=new o(null,3,!0),this.markers={},this.geojson={},this.regionLayer={},this.controls={scale:!0,draw:{draw:{polygon:!1,polyline:!1,rectangle:!1,circle:!1,marker:!1}},custom:new Array(L.control.locate({follow:!1,locateOptions:{maxZoom:15}}),L.control.elevation({imperial:!0}))},this.events={map:{enable:["mousemove"]}},this.mapPoint=new t,L.Icon.Default.imagePath="images"},e.prototype.scaleLookup=function(e){switch(e){case 19:return"1,128";case 18:return"2,256";case 17:return"4,513";case 16:return"9,027";case 15:return"18,055";case 14:return"36,111";case 13:return"72,223";case 12:return"144,447";case 11:return"288,895";case 10:return"577,790";case 9:return"1,155,581";case 8:return"2,311,162";case 7:return"4,622,324";case 6:return"9,244,649";case 5:return"18,489,298";case 4:return"36,978,596";case 3:return"73,957,193";case 2:return"147,914,387";case 1:return"295,828,775";case 0:return"591,657,550"}},e.prototype.initiateStreamgageQuery=function(){this.explorationService.allowStreamgageQuery=!this.explorationService.allowStreamgageQuery},e.prototype.elevationProfile=function(){var e=this;document.getElementById("measurement-div").innerHTML="",this.explorationService.measurementData="",this.explorationService.showElevationChart=!0;var t;this.controls.custom.forEach(function(e){e._container.className.indexOf("elevation")>-1&&(t=e)}),this.angulartics.eventTrack("explorationTools",{category:"Map",label:"elevationProfile"}),this.leafletData.getMap().then(function(r){e.leafletData.getLayers().then(function(o){var n=o.overlays.draw;n.clearLayers(),e.drawController({metric:!1},!0),delete e.geojson.elevationProfileLine3D,r.on("draw:drawstart",function(e){t.clear()}),r.on("draw:created",function(t){r.removeEventListener("draw:created");var o=t.layer.toGeoJSON(),n='{"geometryType":"esriGeometryPolyline","spatialReference":{"wkid":"4326"},"fields": [],"features":[{"geometry": {"type":"polyline", "paths":['+JSON.stringify(o.geometry.coordinates)+"]}}]}";e.cursorStyle="wait",e.toaster.pop("info","Information","Querying the elevation service...",0),e.explorationService.elevationProfile(n),e.explorationService.drawElevationProfile=!1,r.panBy([0,1])})})})},e.prototype.drawController=function(e,t){var r=this;return t?void this.leafletData.getMap().then(function(t){r.drawControl=new L.Draw.Polyline(t,e),r.drawControl.enable()}):(this.drawControl.disable(),void(this.drawControl=void 0))},e.prototype.displayElevationProfile=function(){var e;this.controls.custom.forEach(function(t){t._container&&t._container.className.indexOf("elevation")>-1&&(e=t)}),this.geojson.elevationProfileLine3D={data:this.explorationService.elevationProfileGeoJSON,style:{color:"#ff7800",weight:5,opacity:.65},onEachFeature:e.addData.bind(e)},this.leafletData.getMap().then(function(t){var r=e.onAdd(t);document.getElementById("elevation-div").innerHTML="",document.getElementById("elevation-div").appendChild(r)}),this.toaster.clear(),this.cursorStyle="pointer"},e.prototype.showLocation=function(){var e;this.controls.custom.forEach(function(t){t._container.className.indexOf("leaflet-control-locate")>-1&&(e=t)}),e.start()},e.prototype.resetMap=function(){this.removeOverlayLayers("_region",!0),this.center=new r(39,-100,3)},e.prototype.resetExplorationTools=function(){document.getElementById("elevation-div").innerHTML="",document.getElementById("measurement-div").innerHTML="",this.drawControl&&this.drawController({},!1),this.explorationService.allowStreamgageQuery=!1,this.explorationService.drawMeasurement=!1,this.explorationService.measurementData="",this.explorationService.drawElevationProfile=!1,this.explorationService.showElevationChart=!1},e.prototype.measurement=function(){var e=this;document.getElementById("elevation-div").innerHTML="",this.explorationService.measurementData="Click the map to begin\nDouble click to end the Drawing",this.angulartics.eventTrack("explorationTools",{category:"Map",label:"measurement"}),this.leafletData.getMap().then(function(t){e.leafletData.getLayers().then(function(r){var o=!1;e.drawController({shapeOptions:{color:"blue"},metric:!1},!0);var n=r.overlays.draw;n.clearLayers();var i=function(){e.explorationService.measurementData="Total length: "+e.drawControl._getMeasurementString()},a=function(){0==o&&(o=!0,e.explorationService.measurementData="Total Length: ",t.on("mousemove",i))},s=function(r){var o=r.layer;n.addLayer(o),n.addTo(t),e.explorationService.measurementData="Total length: "+e.drawControl._getMeasurementString(),t.off("click",a),t.off("mousemove",i),t.off("draw:created",s),e.drawControl.disable(),e.explorationService.drawMeasurement=!1};t.on("click",a),t.on("draw:created",s)})})},e.prototype.onSelectedAreaOfInterestChanged=function(e,t){this.angulartics.eventTrack("Search",{category:"Sidebar"}),this.markers={};var r=t.selectedAreaOfInterest;if("U.S. State or Territory"==r.Category)var o=9;else var o=14;this.markers.AOI={lat:r.Latitude,lng:r.Longitude,message:r.Name,focus:!0,draggable:!1},this.leafletData.getMap().then(function(e){e.setView([r.Latitude,r.Longitude],o)})},e.prototype.removeGeoJson=function(e){void 0===e&&(e="");for(var t in this.geojson)"function"!=typeof this.geojson[t]&&(delete this.geojson[t],this.eventManager.RaiseEvent(WiM.Directives.onLayerRemoved,this,new WiM.Directives.LegendLayerRemovedEventArgs(t,"geojson")))},e.prototype.addGeoJSON=function(e,t){},e.prototype.onLayerChanged=function(e,t){if("visible"===t.PropertyName)if(t.Value);else delete this.geojson[t.LayerName]},e.prototype.removeOverlayLayers=function(e,t){var r=this;void 0===t&&(t=!1);var o;o=this.getLayerIdsByID(e,this.layers.overlays,t),o.forEach(function(e){delete r.layers.overlays[e]})},e.prototype.getLayerIdsByName=function(e,t,r){var o=[];for(var n in t)t[n].hasOwnProperty("name")&&(r?t[n].name.indexOf(e)>-1:t[n].name===e)&&o.push(n);return o},e.prototype.getLayerIdsByID=function(e,t,r){var o=[];for(var n in t)(r?n.indexOf(e)>-1:n===e)&&o.push(n);return o},e.$inject=["$scope","toaster","$analytics","$location","$stateParams","leafletBoundsHelpers","leafletData","WiM.Services.SearchAPIService","WiMapper.Services.ExplorationService","WiM.Event.EventManager"],e}();angular.module("WiMapper.Controllers").controller("WiMapper.Controllers.MapController",n)}(t=e.Controllers||(e.Controllers={}))}(WiMapper||(WiMapper={}));var WiMapper;!function(e){var t;!function(t){"use strinct";var r,o=function(){function t(e,t,o,n,i,a){this.EventManager=a,e.vm=this,this.init(),this.toaster=t,this.angulartics=o,this.searchService=n,this.sideBarCollapsed=!1,this.selectedProcedure=r.INIT,this.modalService=i}return t.prototype.getLocations=function(e){return this.searchService.getLocations(e)},t.prototype.setProcedureType=function(e){return this.selectedProcedure!=e&&this.canUpdateProcedure(e)?void(this.selectedProcedure=e):(3==this.selectedProcedure&&4==e&&this.toaster.pop("warning","Warning","Make sure you calculate selected basin characteristics before continuing",5e3),void(2!=this.selectedProcedure||3!=e&&4!=e||this.toaster.pop("warning","Warning","Make sure you have delineated a basin and clicked continue",5e3)))},t.prototype.toggleSideBar=function(){this.sideBarCollapsed?this.sideBarCollapsed=!1:this.sideBarCollapsed=!0},t.prototype.onAOISelect=function(e){this.EventManager.RaiseEvent(WiM.Services.onSelectedAreaOfInterestChanged,this,new WiM.Services.SearchAPIEventArgs(e))},t.prototype.zoomRegion=function(e){angular.fromJson(e)},t.prototype.startSearch=function(e){e.stopPropagation(),e.preventDefault(),$("#sapi-searchTextBox").trigger($.Event("keyup",{keyCode:13}))},t.prototype.checkArrayForObj=function(e,t){for(var r=0;r<e.length;r++)if(angular.equals(e[r],t))return r;return-1},t.prototype.selectScenarios=function(){this.setProcedureType(3)},t.prototype.OpenWateruse=function(){this.modalService.openModal(e.Services.SSModalType.e_wateruse)},t.prototype.init=function(){},t.prototype.canUpdateProcedure=function(e){try{switch(e){case r.INIT:return!0;default:return!1}}catch(t){return!1}},t.prototype.sm=function(e){try{}catch(t){}},t.$inject=["$scope","toaster","$analytics","WiM.Services.SearchAPIService","WiMapper.Services.ModalService","WiM.Event.EventManager"],t}();!function(e){e[e.INIT=1]="INIT",e[e.IDENTIFY=2]="IDENTIFY",e[e.SELECT=3]="SELECT",e[e.BUILD=4]="BUILD"}(r||(r={})),angular.module("WiMapper.Controllers").controller("WiMapper.Controllers.SidebarController",o)}(t=e.Controllers||(e.Controllers={}))}(WiMapper||(WiMapper={}));var __extends=this&&this.__extends||function(e,t){function r(){this.constructor=e}for(var o in t)t.hasOwnProperty(o)&&(e[o]=t[o]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},WiMapper;!function(e){var t;!function(t){"use strict";var r=function(t){function r(e,r,o){t.call(this,r,configuration.baseurls.WiMapperServices),e.vm=this,this.modalService=o}return __extends(r,t),Object.defineProperty(r.prototype,"ProjectName",{get:function(){return configuration.projectName},enumerable:!0,configurable:!0}),r.prototype.openReport=function(){this.modalService.openModal(e.Services.SSModalType.e_report)},r.prototype.openAbout=function(){this.modalService.openModal(e.Services.SSModalType.e_about)},r.prototype.openHelp=function(){this.modalService.openModal(e.Services.SSModalType.e_help)},r.prototype.readCookie=function(e){for(var t=e+"=",r=document.cookie.split(";"),o=0;o<r.length;o++){for(var n=r[o];" "==n.charAt(0);)n=n.substring(1,n.length);if(0==n.indexOf(t))return n.substring(t.length,n.length)}return null},r.prototype.createCookie=function(e,t,r){if(r){var o=new Date;o.setTime(o.getTime()+24*r*60*60*1e3);var n="; expires="+o.toUTCString()}else var n="";document.cookie=e+"="+t+n+"; path=/"},r.$inject=["$scope","$http","WiMapper.Services.ModalService"],r}(WiM.Services.HTTPServiceBase);angular.module("WiMapper.Controllers").controller("WiMapper.Controllers.NavbarController",r)}(t=e.Controllers||(e.Controllers={}))}(WiMapper||(WiMapper={}));